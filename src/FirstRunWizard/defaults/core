// Default includes
using System.Runtime.InteropServices;
using System.Drawing;
using Dotnet.Shell.UI;
using Dotnet.Shell.API.Helpers;


// Load user functions store in homedir
var functionsDir = Path.Combine(Shell.HomeDirectory, Shell.DefaultScriptExtension, "functions");
if (Directory.Exists(functionsDir))
{
    var functions = new List<string>();
    functions.AddRange(Directory.GetFiles(functionsDir, "*.csx*"));
    functions.AddRange(Directory.GetFiles(functionsDir, "*"+Shell.DefaultScriptExtension));

    foreach (var file in functions.OrderBy(q => q))
    {
        ConsoleEx.WriteLine($"Executing script - {file}", Color.Teal);
        #load $file$
    }
}

// Load user command/script aliases
var aliasesFile = Path.Combine(Shell.HomeDirectory, Shell.DefaultScriptExtension, "aliases"+Shell.DefaultScriptExtension);
if (File.Exists(aliasesFile))
{
    #load $aliasesFile$
}

// Ensure we start in the users homedir
cd ~


Shell.Prompt = () => 
{
    return new ColorString($"[{DateTime.UtcNow}] {Shell.WorkingDirectory}> ", Color.LightBlue);
};

