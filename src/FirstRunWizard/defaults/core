// Default includes
using System.Runtime.InteropServices;
using System.Drawing;
using Dotnet.Shell.UI;

Shell.Prompt = () => 
{
    return new ColorString(" " + Shell.WorkingDirectory + ">", Color.LightBlue) + " ";
};

Shell.Paths.Add("C:\\Windows");
Shell.Paths.Add("C:\\Windows\\System32");

// Load user functions store in homedir
var functionsDir = Path.Combine(Shell.HomeDirectory, Shell.DefaultScriptExtension, "functions");
if (Directory.Exists(functionsDir))
{
    var functions = new List<string>();
    functions.AddRange(Directory.GetFiles(functionsDir, "*.csx*"));
    functions.AddRange(Directory.GetFiles(functionsDir, "*"+Shell.DefaultScriptExtension));

    foreach (var file in functions.OrderBy(q => q))
    {
        Console.WriteLine(new ColorString($"Loading script - {file}", Color.Teal).TextWithFormattingCharacters);
        #load $file$
    }
}

// Load user command/script aliases
var aliasesFile = Path.Combine(Shell.HomeDirectory, Shell.DefaultScriptExtension, "aliases"+Shell.DefaultScriptExtension);
if (File.Exists(aliasesFile))
{
    #load $aliasesFile$
}

if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
{
    Console.WriteLine(new ColorString("This OS is currently in beta!", Color.Red).TextWithFormattingCharacters);
}

// Ensure we start in the users homedir
cd ~
